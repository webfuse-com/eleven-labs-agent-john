/* Window */
html, body {
  height: 100%;
  margin: 0;
  background: transparent;
  background-color: transparent;
  color: #fff;
  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial;
  overflow: hidden;
}

@property --energy {
  syntax: "<number>";
  inherits: true;
  initial-value: .65;
}

@property --angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0deg;
}

@property --hue {
  syntax: "<number>";
  inherits: true;
  initial-value: 240;
}

@property --mx {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 50%;
}

@property --my {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 50%;
}

/* Glass effect global variable & children stacking utility */
:root {
  --glass-opacity: 0.45;
  --orb-hue: 240;
  /* base hue */
  --hue: var(--orb-hue);
  /* animatable copy */
  --orb-sat: 88%;
  --orb-core-l1: 58%;
  --orb-core-l2: 68%;
  --orb-hot: 96%;
  --orb-noise: .18;
  --orb-bloom: .22;
  --energy: .65;
  /* 0..1 overall intensity */
  --angle: 0deg;
  /* conic sweep angle */
  --mx: 50%;
  --my: 50%;
  /* “gaze” / attention center */
  /* background transparency without affecting children HERE */
}

/* Ensure children paint above ::before glass overlays */
.va-root>*, .va-topbar>*, .va-connected>*, .va-chat>*, .va-inputrow>* {
  position: relative;
  z-index: 1;
}

/* Root container (three rows: topbar, main, input) */
.va-root {
  position: relative;
  display: grid;
  grid-template-rows: auto 1fr auto;
  border: 1px solid rgba(255, 255, 255, 0.06);
  height: 100%;
  width: 100%;
  max-width: 100%;
  border-radius: 20px;
  overflow: hidden;
  overflow: clip;
  box-shadow:
    inset 0 0 0 1px rgba(255, 255, 255, 0.06),
    0 10px 28px rgba(0, 0, 0, 0.35);
  isolation: isolate;
}

.va-root::before {
  content: "";
  position: absolute;
  inset: 0;
  z-index: 0;
  pointer-events: none;
  border-radius: inherit;
  clip-path: inset(0 round inherit);
  mask-image: radial-gradient(white 98%, transparent 100%);
  -webkit-mask-image: radial-gradient(white 98%, transparent 100%);
  background:
    linear-gradient(180deg, rgba(255, 255, 255, 0.08), rgba(255, 255, 255, 0) 22%),
    rgba(18, 18, 18, var(--glass-opacity));
  backdrop-filter: blur(18px) saturate(140%);
  -webkit-backdrop-filter: blur(18px) saturate(140%);
  mask-mode: match-source;
}

/* ---------------------- Top bar ---------------------- */
.va-topbar {
  display: grid;
  grid-template-columns: 1fr;
  border-top-left-radius: 20px;
  border-top-right-radius: 20px;
  overflow: hidden;
  align-items: center;
  padding: 8px 10px;
  min-height: 64px;
  position: relative;
  isolation: isolate;
}

.va-topbar::before {
  content: "";
  position: absolute;
  inset: 0;
  z-index: 0;
  pointer-events: none;
  border-radius: inherit;
  /* topbar spans full width, inherits container rounding */
  background:
    linear-gradient(180deg, rgba(255, 255, 255, .04), rgba(255, 255, 255, 0) 30%),
    color-mix(in srgb, rgb(22 22 22 / var(--glass-opacity)), black 25%);
  backdrop-filter: blur(14px) saturate(140%);
  -webkit-backdrop-filter: blur(14px) saturate(140%);
  clip-path: inset(0 round inherit);
}

.va-topbar-left {
  display: inline-flex;
  align-items: center;
  gap: 10px;
}

.va-status {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  color: #b0b0b0;
  font-size: 13px;
  padding: 0;
  /* no pill look */
  background: transparent;
  border: none;
}

/* Status color hooks (JS can change data-status on .va-root) */
.va-root[data-status="idle"] .va-status-dot {
  box-shadow: 0 0 8px rgba(107, 114, 128, 0.55), 0 0 1px rgba(255, 255, 255, 0.35) inset;
}

.va-root[data-status="listening"] .va-status-dot {
  box-shadow: 0 0 10px rgba(34, 197, 94, 0.7), 0 0 1px rgba(255, 255, 255, 0.35) inset;
}

.va-root[data-status="thinking"] .va-status-dot {
  box-shadow: 0 0 10px rgba(245, 158, 11, 0.7), 0 0 1px rgba(255, 255, 255, 0.35) inset;
}

.va-root[data-status="speaking"] .va-status-dot {
  box-shadow: 0 0 10px rgba(59, 130, 246, 0.7), 0 0 1px rgba(255, 255, 255, 0.35) inset;
}

/* Small avatar in the header */
.va-avatar {
  display: inline-grid;
  place-items: center;
}

.va-avatar--sm {
  width: 35px;
  height: 35px;
  border-radius: 50%;
  overflow: hidden;
}

.va-avatar--sm .va-orb-core {
  width: 100%;
  height: 100%;
  border-radius: 50%;
}

/* ---------------------- Idle ---------------------- */
.va-idle {
  display: grid;
  place-items: center;
  padding: 24px;
  gap: 16px;
  background:
    linear-gradient(180deg, rgba(255, 255, 255, .04), rgba(255, 255, 255, 0) 30%),
    color-mix(in srgb, rgb(22 22 22 / var(--glass-opacity)), black 25%);
}

.va-root[data-state="connected"] .va-idle {
  display: none;
}

.va-orb {
  position: relative;
  width: 200px;
  /* slightly larger for presence */
  height: 200px;
  padding: 4vmin;
  border-radius: 24px;
  display: grid;
  place-items: center;
}

/* ===== CORE SPHERE ===== */
.va-orb-core {
  position: relative;
  width: 78%;
  height: 78%;
  border-radius: 50%;
  isolation: isolate;
  will-change: transform, filter;

  /* Base body with deeper core + inner shadow + chroma ring */
  background:
    /* specular hotspot (follows attention) */
    radial-gradient(32% 28% at var(--mx) var(--my),
      hsl(var(--hue) 30% var(--orb-hot) / calc(.55 + .4*var(--energy))) 0%, transparent 55%),

    /* inner caustics (soft glow) */
    radial-gradient(55% 55% at 56% 50%,
      hsl(var(--hue) var(--orb-sat) var(--orb-core-l1) / .55) 0%, transparent 62%),

    /* depth tint */
    radial-gradient(80% 80% at 48% 56%,
      hsl(calc(var(--hue) + 10) calc(var(--orb-sat) - 8%) var(--orb-core-l2) / .7) 0%, transparent 64%),

    /* rim chroma (thin ring) */
    radial-gradient(closest-side at 50% 50%,
      transparent 56%, hsl(var(--hue) 100% 86% / .22) 58%, transparent 62%),

    /* soft inner vignette for spherical shading */
    radial-gradient(100% 100% at 50% 54%,
      rgba(0, 0, 0, .24) 44%, rgba(0, 0, 0, 0) 58%),

    /* base color body */
    radial-gradient(50% 50% at 50% 50%,
      hsl(var(--hue) var(--orb-sat) var(--orb-core-l1)) 0%,
      hsl(calc(var(--hue) + 6) calc(var(--orb-sat) - 10%) calc(var(--orb-core-l2) - 6%)) 46%,
      transparent 47%);

  background-blend-mode: screen, screen, screen, screen, multiply, normal;

  /* glow + inner sheen (energy scaled) */
  box-shadow:
    0 0 calc(24px + 18px*var(--energy)) rgba(162, 170, 243, .45),
    0 0 calc(56px + 24px*var(--energy)) rgba(110, 120, 255, .28),
    inset 0 0 22px rgba(255, 255, 255, .16),
    inset 0 0 calc(42px + 28px*var(--energy)) rgba(2, 10, 230, .22);

  filter:
    saturate(calc(1.1 + .3*var(--energy))) contrast(calc(1.02 + .06*var(--energy))) brightness(.92);
  animation:
    orbFloat 5.2s ease-in-out infinite,
    orbBreath 3s ease-in-out infinite,
    hueDrift 26s linear infinite,
    thoughtTilt 9s ease-in-out infinite;
}

/* ===== MOVING CAUSTICS + NEURAL RINGS ===== */
.va-orb-core::before {
  content: "";
  position: absolute;
  inset: -6%;
  border-radius: 50%;
  mix-blend-mode: screen;
  filter: blur(10px) saturate(120%);
  will-change: transform, filter;

  /* conic sweep + neural rings + sparkles */
  background:
    /* light sweep wedge (angle-driven) */
    conic-gradient(from var(--angle),
      rgba(255, 255, 255, .02),
      rgba(255, 255, 255, calc(.12 + .12*var(--energy))) 14deg,
      rgba(255, 255, 255, .05) 28deg,
      rgba(255, 255, 255, .02) 60deg,
      rgba(255, 255, 255, .03) 1turn),

    /* neural rings (interference look) */
    repeating-conic-gradient(from calc(var(--angle) * -1),
      hsl(var(--hue) 100% 70% / .06) 0 6deg,
      transparent 6deg 18deg),

    /* sparkles (two scales) */
    radial-gradient(1px 1px at 18% 22%, rgba(255, 255, 255, var(--orb-noise)) 99%, transparent 100%),
    radial-gradient(1px 1px at 76% 34%, rgba(255, 255, 255, var(--orb-noise)) 99%, transparent 100%),
    radial-gradient(1px 1px at 64% 78%, rgba(255, 255, 255, var(--orb-noise)) 99%, transparent 100%),
    radial-gradient(1px 1px at 30% 68%, rgba(255, 255, 255, var(--orb-noise)) 99%, transparent 100%),
    radial-gradient(1px 1px at 12% 12%, rgba(255, 255, 255, calc(var(--orb-noise) * .7)) 99%, transparent 100%),
    radial-gradient(1px 1px at 24% 88%, rgba(255, 255, 255, calc(var(--orb-noise) * .7)) 99%, transparent 100%),
    radial-gradient(1px 1px at 88% 20%, rgba(255, 255, 255, calc(var(--orb-noise) * .7)) 99%, transparent 100%),
    radial-gradient(1px 1px at 70% 64%, rgba(255, 255, 255, calc(var(--orb-noise) * .7)) 99%, transparent 100%);

  background-blend-mode: screen;
  /* “thought flow” — multiple desynced loops for organic feel */
  animation:
    orbSweep 12.3s linear infinite,
    orbGlow 5.6s ease-in-out infinite alternate,
    orbTwinkle 7.7s ease-in-out infinite,
    ringDrift 18.9s linear infinite;
}

/* ===== OUTER AURA + CHROMA FRINGE ===== */
.va-orb-core::after {
  content: "";
  position: absolute;
  inset: -16%;
  border-radius: 50%;
  pointer-events: none;
  mix-blend-mode: screen;
  filter: blur(calc(14px + 10px*var(--energy)));

  background:
    /* soft outer bloom */
    radial-gradient(60% 60% at 50% 50%,
      hsl(var(--hue) 100% 80% / calc(var(--orb-bloom) + .1*var(--energy))) 0%, transparent 68%),
    /* subtle halo ring with chromatic split */
    radial-gradient(closest-side,
      transparent 62%, rgba(160, 180, 255, .22) 66%, transparent 72%);

  /* faint diffraction glint that slowly orbits */
  box-shadow:
    0 0 calc(44px + 24px*var(--energy)) hsl(var(--hue) 100% 70% / .22),
    0 0 calc(92px + 28px*var(--energy)) hsl(var(--hue) 100% 60% / .16);
  animation: orbPulse 4.2s ease-in-out infinite, auraOrbit 33s linear infinite;
}

/* ===== STATES (toggle these classes) ===== */
.va-orb-core.is-idle {
  --energy: .45;
  animation-duration: 5.6s, 3.4s, 28s, 10s;
}

.va-orb-core.is-thinking {
  --energy: .85;
  animation-duration: 4.8s, 2.8s, 22s, 8.6s;
}

/* Speaking: vivid, obvious flashes */
.va-orb-core.is-speaking {
  --energy: 1.00;
  filter: saturate(160%) contrast(118%) brightness(1.02);
}

/* stronger visible “audio” flashes during speaking */
.va-orb-core.is-speaking::before {
  animation:
    orbSweep 8.8s linear infinite,
    orbGlow 4.2s ease-in-out infinite alternate,
    orbTwinkle 6.2s ease-in-out infinite,
    ringDrift 16.5s linear infinite,
    audioFlash 1.0s ease-in-out infinite;
  filter: blur(10px) saturate(150%) brightness(1.05);
}
.va-orb-core.is-speaking::after {
  animation: orbPulse 3.2s ease-in-out infinite, auraOrbit 22s linear infinite, audioFlash 1.1s ease-in-out infinite;
  filter: blur(calc(18px + 12px*var(--energy))) saturate(140%) brightness(1.05);
  box-shadow:
    0 0 calc(64px + 30px*var(--energy)) hsl(var(--hue) 100% 72% / .34),
    0 0 calc(124px + 36px*var(--energy)) hsl(var(--hue) 100% 62% / .26);
}

/* ===== Animations ===== */
@keyframes orbFloat {
  0%, 100% {
    transform: translateY(0)
  }

  50% {
    transform: translateY(-8px)
  }
}

@keyframes orbBreath {
  0%, 100% {
    transform: scale(1)
  }

  50% {
    transform: scale(1.03)
  }
}

@keyframes orbSweep {
  to {
    transform: rotate(360deg)
  }
}

@keyframes ringDrift {
  to {
    transform: rotate(-360deg)
  }
}

@keyframes orbPulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1
  }

  50% {
    transform: scale(1.08);
    opacity: .82
  }
}

@keyframes orbGlow {
  0%, 100% {
    box-shadow: 0 0 10px hsl(var(--hue) 100% 55%)
  }

  50% {
    box-shadow: 0 0 22px hsl(var(--hue) 100% 55%), 0 0 36px hsl(calc(var(--hue)+8) 100% 62%)
  }
}

@keyframes hueDrift {
  0% {
    filter: hue-rotate(0)
  }

  50% {
    filter: hue-rotate(10deg)
  }

  100% {
    filter: hue-rotate(0)
  }
}

@keyframes thoughtTilt {
  0%, 100% {
    transform: perspective(600px) rotateX(0deg) rotateY(0deg)
  }

  33% {
    transform: perspective(600px) rotateX(2.2deg) rotateY(-2.6deg)
  }

  66% {
    transform: perspective(600px) rotateX(-1.8deg) rotateY(2.0deg)
  }
}

@keyframes auraOrbit {
  to {
    box-shadow: 0 0 68px hsl(calc(var(--hue)+8) 100% 72% / .22),
      0 0 120px hsl(calc(var(--hue)-8) 100% 60% / .16);
  }
}

@keyframes audioFlash {
  0%, 100% {
    filter: brightness(1) saturate(1);
  }

  50% {
    filter: brightness(1.35) saturate(1.45);
  }
}

/* Phone button under orb */
.va-callbtn {
  appearance: none;
  position: absolute;
  left: 50%;
  bottom: -6px;
  transform: translateX(-50%);
  width: 48px;
  height: 48px;
  border-radius: 10px;
  border: 1px solid rgba(255, 255, 255, 0.12);
  background: rgba(0, 0, 0, 0.45);
  color: #fff;
  cursor: pointer;
  display: grid;
  place-items: center;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.35);
  backdrop-filter: blur(10px) saturate(120%);
  -webkit-backdrop-filter: blur(10px) saturate(120%);
}

.va-callbtn:hover {
  background: #111827;
}

.va-idle-hint {
  margin-top: 28px;
  font-size: 13px;
  color: #9ca3af;
  padding: 6px 10px;
  border-radius: 10px;
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
}

/* ---------------------- Connected ---------------------- */
.va-connected {
  display: none;
  height: 100%;
  grid-template-rows: 1fr auto;
  min-height: 0;
}

.va-root[data-state="connected"] .va-connected {
  display: grid;
}

/* Chat area */
.va-chat {
  border-radius: 0px;
  overflow: auto;
  min-height: 0;
  padding: 12px 12px 8px 12px;
  position: relative;
  isolation: isolate;
  background:
    linear-gradient(180deg, rgba(255, 255, 255, .04), rgba(255, 255, 255, 0) 30%),
    color-mix(in srgb, rgb(22 22 22 / var(--glass-opacity)), black 15%);
}

.va-chat::before {
  content: "";
  position: absolute;
  inset: 0;
  z-index: 0;
  pointer-events: none;
  border-radius: inherit;
  backdrop-filter: blur(10px) saturate(140%);
  -webkit-backdrop-filter: blur(10px) saturate(140%);
  clip-path: inset(0 round inherit);
}

.va-chat::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.va-chat::-webkit-scrollbar-thumb {
  background: #3a3a3a;
  border-radius: 4px;
}

.va-chat::-webkit-scrollbar-track {
  background: transparent;
}

/* Ensure grid children can shrink within the fixed popup */
.va-root, .va-topbar, .va-connected, .va-inputrow {
  min-height: 0;
}

/* Message rows */
.va-row {
  display: flex;
  align-items: flex-end;
  gap: 8px;
  margin: 8px 0;
}

.va-row.agent {
  justify-content: flex-start;
}

.va-row.user {
  justify-content: flex-end;
}

/* Small orb bullet for agent rows */
.va-bullet {
  width: 18px;
  height: 18px;
  border-radius: 50%;
  overflow: hidden;
  flex: 0 0 auto;
}

.va-bullet .va-orb-core {
  width: 100%;
  height: 100%;
  border-radius: 50%;
}

/* Bubbles */
.va-bubble {
  display: inline-block;
  max-width: 85%;
  padding: 12px 14px;
  border-radius: 14px;
  line-height: 1.4;
  white-space: pre-wrap;
  word-wrap: break-word;
  box-sizing: border-box;
  font-size: 14px;
  border: 1px solid rgba(255, 255, 255, 0.10);
  backdrop-filter: blur(6px) saturate(130%);
  -webkit-backdrop-filter: blur(6px) saturate(130%);
}

.va-bubble.agent {
  background: rgba(28, 28, 28, 0.55);
  color: #e5e7eb;
}

.va-bubble.user {
  background: rgba(0, 0, 0, 0.55);
  color: #ffffff;
}

.va-bubble.user.interim {
  opacity: 0.8;
}

/* ---------------------- Input row ---------------------- */
.va-inputrow {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: 8px;
  padding: 10px;
  position: relative;
  isolation: isolate;
  border-bottom-left-radius: 20px;
  border-bottom-right-radius: 20px;
  overflow: hidden;
}

.va-inputrow::before {
  content: "";
  position: absolute;
  inset: 0;
  z-index: 0;
  pointer-events: none;
  border-radius: 0;
  background:
    linear-gradient(180deg, rgba(255, 255, 255, .04), rgba(255, 255, 255, 0) 30%),
    color-mix(in srgb, rgb(22 22 22 / var(--glass-opacity)), black 25%);
  backdrop-filter: blur(12px) saturate(125%);
  -webkit-backdrop-filter: blur(12px) saturate(125%);
  clip-path: inset(0 round inherit);
  border-bottom-left-radius: 20px;
  border-bottom-right-radius: 20px;
  overflow: hidden;
}

.va-input {
  background: rgba(0, 0, 0, 0.35);
  border: 1px solid rgba(255, 255, 255, 0.12);
  color: #fff;
  border-radius: 8px;
  padding: 10px 12px;
  outline: none;
  min-width: 0;
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
}

.va-input::placeholder {
  color: #9ca3af;
}

.va-input:focus {
  border-color: #6b7280;
}

.va-input-actions {
  display: inline-flex;
  align-items: center;
  gap: 8px;
}

.va-iconbtn,
.va-sendbtn {
  appearance: none;
  border: 1px solid rgba(255, 255, 255, 0.12);
  background: rgba(0, 0, 0, 0.35);
  color: #fff;
  border-radius: 8px;
  padding: 8px 10px;
  cursor: pointer;
  display: grid;
  place-items: center;
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  box-shadow: 0 1px 0 rgba(255, 255, 255, 0.04) inset, 0 8px 18px rgba(0, 0, 0, 0.25);
  transition: background 120ms ease, border-color 120ms ease, box-shadow 120ms ease, transform 80ms ease;
}

.va-iconbtn:hover,
.va-sendbtn:hover {
  background: rgba(255, 255, 255, 0.10);
}

.va-iconbtn.va-danger:hover {
  background: rgba(239, 68, 68, 0.25);
}

.va-icon {
  display: block
}

/* -------------- Utilities -------------- */
[hidden] {
  display: none !important;
}

/* New muted button highlight style */
.va-iconbtn.is-muted {
  background: rgba(138, 180, 248, 0.20);
  box-shadow: 0 1px 0 rgba(255, 255, 255, 0.06) inset, 0 10px 24px rgba(138, 180, 248, 0.25);
}

.va-iconbtn.is-muted:hover {
  background: rgba(138, 180, 248, 0.28);
}


/* Generic glass helper (not applied automatically) */
.glass {
  position: relative;
  isolation: isolate;
  border-radius: 20px;
}

.glass::before {
  content: "";
  position: absolute;
  inset: 0;
  z-index: 0;
  pointer-events: none;
  border-radius: inherit;
  background: rgba(18, 18, 18, var(--glass-opacity));
  backdrop-filter: blur(12px) saturate(135%);
  -webkit-backdrop-filter: blur(12px) saturate(135%);
}

/* Optional: subtle glass border highlight on container edges */
.va-root {
  box-shadow:
    inset 0 0 0 1px rgba(255, 255, 255, 0.06),
    0 10px 28px rgba(0, 0, 0, 0.35);
  border-radius: inherit;
  /* keep */
  clip-path: inset(0 round inherit);
}

/* Stabilize blur clipping across browsers */
.va-root::before,
.va-topbar::before,
.va-chat::before,
.va-inputrow::before {
  will-change: transform;
  transform: translateZ(0);
}

.va-status-favicon {
  vertical-align: -2px;
  opacity: .95;
  filter: drop-shadow(0 0 2px rgba(255, 255, 255, .18));
}


/* ===== Amplify animations for the SMALL header orb only ===== */
.va-avatar--sm .va-orb-core {
  /* baseline pop for the tiny orb */
  --energy: .72;
  filter:
    saturate(1.25) contrast(1.06) brightness(.98);
  /* slightly tighter, more “alive” motion */
  animation-duration: 4.7s, 2.6s, 20s, 8s;
  /* orbFloat, orbBreath, hueDrift, thoughtTilt */

  /* stronger core/aura for small size */
  box-shadow:
    0 0 calc(22px + 18px*var(--energy)) rgba(162, 170, 243, .58),
    0 0 calc(44px + 22px*var(--energy)) rgba(110, 120, 255, .34),
    inset 0 0 24px rgba(255, 255, 255, .18),
    inset 0 0 calc(46px + 30px*var(--energy)) rgba(2, 10, 230, .26);
}

/* livelier moving caustics/sweep in small orb */
.va-avatar--sm .va-orb-core::before {
  filter: blur(9px) saturate(140%);
  /* make the sweep wedge brighter & a bit faster */
  animation:
    orbSweep 9.5s linear infinite,
    orbGlow 4.8s ease-in-out infinite alternate,
    orbTwinkle 6.4s ease-in-out infinite,
    ringDrift 15.5s linear infinite;
  /* slight boost to the wedge/lines opacity */
  background:
    conic-gradient(from var(--angle),
      rgba(255, 255, 255, .03),
      rgba(255, 255, 255, calc(.20 + .16*var(--energy))) 14deg,
      rgba(255, 255, 255, .07) 28deg,
      rgba(255, 255, 255, .03) 60deg,
      rgba(255, 255, 255, .05) 1turn),
    repeating-conic-gradient(from calc(var(--angle) * -1),
      hsl(var(--hue) 100% 70% / .10) 0 6deg,
      transparent 6deg 18deg),
    radial-gradient(1px 1px at 18% 22%, rgba(255, 255, 255, .24) 99%, transparent 100%),
    radial-gradient(1px 1px at 76% 34%, rgba(255, 255, 255, .24) 99%, transparent 100%),
    radial-gradient(1px 1px at 64% 78%, rgba(255, 255, 255, .24) 99%, transparent 100%),
    radial-gradient(1px 1px at 30% 68%, rgba(255, 255, 255, .24) 99%, transparent 100%),
    radial-gradient(1px 1px at 12% 12%, rgba(255, 255, 255, .18) 99%, transparent 100%),
    radial-gradient(1px 1px at 24% 88%, rgba(255, 255, 255, .18) 99%, transparent 100%),
    radial-gradient(1px 1px at 88% 20%, rgba(255, 255, 255, .18) 99%, transparent 100%),
    radial-gradient(1px 1px at 70% 64%, rgba(255, 255, 255, .18) 99%, transparent 100%);
}

/* punchier outer bloom/halo for small orb */
.va-avatar--sm .va-orb-core::after {
  filter: blur(calc(16px + 12px*var(--energy)));
  animation: orbPulse 3.6s ease-in-out infinite, auraOrbit 24s linear infinite;
  box-shadow:
    0 0 calc(56px + 26px*var(--energy)) hsl(var(--hue) 100% 72% / .28),
    0 0 calc(110px + 32px*var(--energy)) hsl(var(--hue) 100% 62% / .22);
}

/* STATES — stronger reactions when small */
/* Thinking: noticeably energized */
.va-avatar--sm .va-orb-core.is-thinking {
  --energy: .95;
  /* keep duration constant; unified below */
  filter: saturate(1.35) contrast(1.08) brightness(1.0);
}

/* Header (small) orb — speaking: punchier flashes */
.va-avatar--sm .va-orb-core.is-speaking {
  --energy: 1;
  filter: saturate(1.85) contrast(1.22) brightness(1.06);
  box-shadow:
    0 0 40px rgba(180,190,255,.70),
    0 0 96px rgba(120,130,255,.42),
    inset 0 0 26px rgba(255,255,255,.22),
    inset 0 0 70px rgba(2,10,230,.36);
}

/* Muted still wins — dim it decisively */
/* Muted state – warm dim yellow, softer and slower */
.va-orb--muted .va-orb-core,
.va-avatar--sm.va-orb--muted .va-orb-core {
  /* shift palette toward a warm yellow while keeping it subdued */
  --hue: 48;
  /* yellow-gold */
  --orb-sat: 68%;
  --orb-bloom: .14;
  --energy: .42;

  /* feel: quiet, dim, but not greyed-out completely */
  filter: saturate(0.45) grayscale(0.6) brightness(0.86) opacity(0.72);
  animation-duration: 7.6s, 5.6s;
  /* slower orbFloat & orbBreath */
}

/* keep muted aura/rings subdued and yellowish */
.va-orb--muted .va-orb-core::before,
.va-avatar--sm.va-orb--muted .va-orb-core::before {
  filter: saturate(0.7) brightness(0.9);
}

.va-orb--muted .va-orb-core::after,
.va-avatar--sm.va-orb--muted .va-orb-core::after {
  filter: blur(calc(12px + 8px*var(--energy))) saturate(0.7) brightness(0.9);
}
/* Keep durations constant across states for SMALL orb to avoid jumps */
.va-avatar--sm .va-orb-core,
.va-avatar--sm .va-orb-core.is-thinking,
.va-avatar--sm .va-orb-core.is-speaking {
  /* orbFloat, orbBreath, hueDrift, thoughtTilt */
  animation-duration: 4.7s, 2.6s, 20s, 8s;
}

@keyframes audioFlashSmall {
  0%, 100% { filter: brightness(1)   saturate(1); }
  50%      { filter: brightness(1.18) saturate(1.25); }
}

/* Use the gentler flash on SMALL orb while speaking */
.va-avatar--sm .va-orb-core.is-speaking::before {
  animation:
    orbSweep 9.5s linear infinite,
    orbGlow 4.8s ease-in-out infinite alternate,
    orbTwinkle 6.4s ease-in-out infinite,
    ringDrift 15.5s linear infinite,
    audioFlashSmall 1.0s ease-in-out infinite;
}
.va-avatar--sm .va-orb-core.is-speaking::after {
  animation:
    orbPulse 3.2s ease-in-out infinite,
    auraOrbit 22s linear infinite,
    audioFlashSmall 1.05s ease-in-out infinite;
}

/* Muted (small orb) — let palette/filter ease in */
.va-avatar--sm.va-orb--muted .va-orb-core {
  transition:
    --hue 280ms ease,
    --energy 220ms ease,
    filter 240ms ease,
    box-shadow 260ms ease;
}



/* =========================
   Compact / Mobile variant
   Target container ~175 x 200
   Applies when either:
   - viewport is small, OR
   - `.va-root` has data-variant="mobile"
   ========================= */
@media (max-width: 380px), (max-height: 260px) {
  .va-root[data-variant="mobile"] &,
  .va-root[data-mobile="true"] & {}

  /* Root grid stays the same: auto | 1fr | auto.
     We trim paddings / sizes inside to fit 175x200 containers. */

  /* --- Top bar --- */
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-topbar {
    min-height: 34px;
    padding: 6px 8px;
  }

  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-avatar--sm {
    width: 28px;
    height: 28px;
  }

  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-status {
    gap: 6px;
    font-size: 12px;
  }

  /* --- IDLE view (big orb) --- */
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-idle {
    padding: 12px;
    gap: 10px;
  }

  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-orb {
    width: 90px;
    height: 90px;
    padding: 3vmin;
  }

  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-callbtn {
    width: 44px;
    height: 44px;
    border-radius: 10px;
    bottom: -4px;
  }

  /* Normalize mobile icon button box and center icons precisely */
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-iconbtn,
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-sendbtn,
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-callbtn {
    padding: 6px;              /* slightly larger touch area */
    min-width: 34px;           /* larger square tap target */
    min-height: 34px;
    line-height: 0;            /* kill inline baseline gaps */
    display: grid;
    place-items: center;
  }

  /* Iconify icons: force 15×15 and override inline attributes */
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-iconbtn iconify-icon,
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-sendbtn iconify-icon,
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-callbtn iconify-icon {
    width: 15px !important;
    height: 15px !important;
    display: block;
    margin: 0;
  }

  /* Inline SVGs (fallbacks): match 15×15 */
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-iconbtn svg,
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-sendbtn svg,
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-callbtn svg {
    width: 15px;
    height: 15px;
    display: block;
    margin: 0;
  }

  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-iconbtn > *,
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-sendbtn > *,
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-callbtn > * {
    pointer-events: none; /* avoid mis-taps on inner SVG */
  }

  /* Ensure the input-actions group doesn't stretch the buttons */
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-input-actions {
    align-items: center;
  }

  /* --- Connected view --- */
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-connected {
    grid-template-rows: 1fr auto;
  }

  /* Chat area smaller paddings */
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-chat {
    padding: 6px 6px 4px 6px;
  }

  /* Bubbles: slightly smaller text/padding, same radii */
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-bubble {
    font-size: 13px;
    line-height: 1.5;
    padding: 8px 10px;
    border-radius: 12px;
    max-width: 90%;
  }

  /* Message row gaps tighter */
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-row {
    gap: 6px;
    margin: 6px 0;
  }

  /* Bullet orb size matches header avatar scale */
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-bullet {
    width: 16px;
    height: 16px;
  }

  /* --- Input row --- */
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-inputrow {
    gap: 6px;
    padding: 6px;
  }

  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-input {
    padding: 8px 10px;
    font-size: 13px;
    border-radius: 7px;
  }
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-idle-hint {
    font-size: 12px;
  }

  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-input::placeholder {
    font-size: 1em;
  }

  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-input-actions {
    gap: 6px;
  }

  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-iconbtn,
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-sendbtn {
    padding: 8px;              /* match larger hit area */
    border-radius: 8px;
  }

  /* Thinner scrollbars */
  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-chat::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }

  :where(.va-root[data-variant="mobile"], .va-root[data-mobile="true"]) .va-chat::-webkit-scrollbar-thumb {
    background: #333;
    border-radius: 3px;
  }
}

/* Force-compact utility for programmatic opt-in even on larger screens */
.va-root[data-variant="mobile"],
.va-root[data-mobile="true"] {
  /* no size set here; host defines container as 175x200.
     The internal trims above ensure it fits cleanly. */
}